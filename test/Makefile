TESTS := $(basename $(wildcard test_*.S)) $(basename $(wildcard test_*.c))

FUSESOC=fusesoc
FUSESOC_TOOL=ghdl

CROSS_CC?=riscv64-unknown-elf-gcc
CROSS_OBJCOPY?=riscv64-unknown-elf-objcopy

CFLAGS := -march=rv32ic -mabi=ilp32	\
	  -fno-pic -nostartfiles -nostdlib

LDFLAGS := -march=rv32ic -mabi=ilp32	\
	   -fno-pic -Wl,--no-relax	\
	   -nostartfiles -nostdlib

default: dirs $(addsuffix /pass, $(TESTS))

dirs:
	-@mkdir -p $(TESTS)

VPATH=../asm

clean:
	rm -rf *.o $(TESTS)

.PHONY: default clean dirs $(TESTS)
.PRECIOUS: %.o %/minimax.rom %/a.out

# Make each test case try to generate a "pass" file
.SECONDEXPANSION:
$(TESTS): dirs $$@/pass

# ...the "pass" file is generated by a successful simulation result
%/pass: %/minimax.rom ../rtl/minimax.vhd ../rtl/minimax_tb.vhd
	-@mkdir -p $*
	-@if [ ! -e $*/fusesoc.conf ]; then cd $* && fusesoc library add minimax ../..; fi
	cd $* && \
		$(FUSESOC) run --target=sim --tool=$(FUSESOC_TOOL) minimax	\
			--MAXTICKS=100000					\
			--ROM_FILENAME=minimax.rom > log
	touch $@

# .mem generator
%/minimax.rom: %/a.out
	$(CROSS_OBJCOPY) -O binary $< $@.bin
	../asm/bin2mem $@.bin $@

# Linker
%/a.out: %.o microcode.o
	$(CROSS_CC) $(LDFLAGS) -T ../asm/bare.ld -o $@ $^

# Assembler
%.o: %.S
	$(CROSS_CC) $(CFLAGS) -c -o $@ \
		-DTEST_FUNC_NAME=$* -DTEST_FUNC_TXT='"$*"' -DTEST_FUNC_RET=$*_ret $<

# Compiler
%.o: %.c
	$(CROSS_CC) $(CFLAGS) -Os -c -o $@ $<
